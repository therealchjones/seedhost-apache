# Additions to the standard Apache configuration

# Allow better discoverability
ServerTokens Full

# Load modules used within additional configurations
<IfModule !headers_module>
  Include /etc/apache2/mods-available/headers.load
</IfModule>
<IfModule !cgid_module>
  Include /etc/apache2/mods-available/cgid.load
</IfModule>
<IfModule !proxy_module>
  Include /etc/apache2/mods-available/proxy.load
</IfModule>
<IfModule !proxy_http_module>
  Include /etc/apache2/mods-available/proxy_http.load
</IfModule>

# CGID sockets
ScriptSock /home/chjones/.apache2/tmp/cgidsock

# This will always override the standard <VirtualHost *> directive and still
# match everything unless Apache starts listening on a different port. It's
# listed first to match any connection whose Host header is absent or does not
# match one of the other defined virtual hosts.
<VirtualHost *:${APACHE_PORT}>
  ServerName https://${APACHE_RUN_USER}.${APACHE_HOSTNAME}
  # Use the actual supplied name if given in Host header, ServerName if not
  UseCanonicalName Off
  DocumentRoot ${APACHE_DOCUMENT_ROOT}
	<Directory ${APACHE_DOCUMENT_ROOT}>
	  Require all granted
	</Directory>

  # Proxy right back here, but with a proper Host header to choose
  # the right virtual host even when first proxied through nginx
  <If "req('X-Forwarded-Host') == 'www.aleph0.com'">
    RequestHeader set Host www.aleph0.com
    # Make sure we don't end up in a loop
    RequestHeader unset X-Forwarded-Host
    ProxyPreserveHost On
    RewriteEngine On
    RewriteRule '^/(.*)$' 'http://127.0.0.1:8000/$1' [P]
  </If>
</VirtualHost>
