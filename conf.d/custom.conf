# ~/.apache2/conf.d/custom.conf

# Loaded along wth any other files in ~/.apache2/conf.d/ as the last
# set of configuration files for apache2.
# See also information about merging multiple configuration sections at
# https://httpd.apache.org/docs/2.4/en/sections.html#merging

# Currently not working right:
# plex.aleph0.com/overseerr login
# radarr login redirect

# Not served by Apache:
# https?://server1359.seedhost.eu/
#   /chjones/deluge
#   /chjones/transmission
#   /chjones/overseerr
#   /chjones/prowlarr
#   /chjones/radarr
# Anything else under /chjones/ is passed as:
#   /chjones/-> http://chjones.server1359.seedhost.eu
# and https?://([^\.]*\.)?chjones.server1359.seedhost.eu has all content
# proxied as:
#   / -> http://127.0.0.1:8000
# which is this Apache server. (See also /etc/nginx/hosts/chjones.conf,
# which additionally sets proxy headers for this proxy_pass, including setting
# Host to chjones.server1359.seedhost.eu.)
# Finally, note that these proxy passes are set so that the *full path* of
# the original request is passed as the path of the proxy request, so, for
# instance, https://server1359.seedhost.eu/chjones/foo translates to an
# Apache request for /chjones/foo with Host set to
# chjones.server1359.seedhost.eu.

# In order to simplify interpretation of directives that conflict between
# this file and other (especially non-editable) configuration files, all
# directives in this file are wrapped in this VirtualHost block; since it
# is more specific than any other defined VirtualHost blocks, yet matches
# all traffic to this server (i.e., those that are not proxied by nginx),
# directives here take precedence and are merged with those from the root
# configuration. (As of this writing, the only directives *removed* are
# those setting ServerName and DocumentRoot and equivalents.)
# Locations and Directories referred to elsewhere in the root context:
# Alias /icons/ /usr/share/apache2/icons/
# Directory /usr/share/apache2/icons
# Directory /home/*/public_html
# Location /server-status
# Location /chjones/RPC1
# ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
# Directory /usr/lib/cgi-bin
# ProxyPass /chjones/bazarr
# ProxyPass /chjones/sonarr

<VirtualHost *:8000>
  ServerName https://plex.aleph0.com
  ServerAlias *
  DocumentRoot "${APACHE_DOCUMENT_ROOT}"
  UseCanonicalName On

  CustomLog "|/usr/bin/rotatelogs -L /home/chjones/logs/apache2/access.log /home/chjones/logs/apache2/access.log 10M" custom

  LogLevel warn

  # Even with UseCanonicalName on, some proxied apps (like bazarr) use the
  # passed Host header instead (which in most cases is
  # chjones.server1359.seedhost.eu). This is accomodated for by nginx when
  # the original Host request is for server1359.seedhost.eu, but not
  # when Host is plex.aleph0.com. We accomodate the latter case by setting
  # the header here if appropriate.
  <If "'%{HTTP:X-Forwarded-Host}' == 'plex.aleph0.com'">
    RequestHeader set Host plex.aleph0.com
  </If>

  # Enable Google OAuth authentication & authorization
  # Use the locally-built auth_openidc
  <IfModule !auth_openidc_module>
    LoadModule auth_openidc_module /home/chjones/software/apache2/modules/mod_auth_openidc.so
  </IfModule>
  OIDCProviderMetadataURL https://accounts.google.com/.well-known/openid-configuration
  OIDCClientID 92135884505-iue0lacl73uajbudk65v9h3pap7eliuq.apps.googleusercontent.com
  OIDCCryptoPassphrase "exec:/bin/sh -c 'grep OIDCCryptoPassphrase \"${APACHE_FOLDER}/secrets/secrets.conf\" | cut -d \" \" -f 2'"
  OIDCClientSecret "exec:/bin/sh -c 'grep OIDCClientSecret \"${APACHE_FOLDER}/secrets/secrets.conf\" | cut -d \" \" -f 2'"
  OIDCDefaultURL https://plex.aleph0.com/chjones/oauth/error
  OIDCRedirectURI https://plex.aleph0.com/chjones/oauth/redirect
  OIDCScope "openid https://www.googleapis.com/auth/userinfo.email"
  # These settings ensure a login works for 2 weeks, but retrieved
  # tokens are only available for an hour (and thus the user is never
  # reauthenticated during those two weeks)
  OIDCAuthRequestParams "hd=aleph0.com"
  OIDCSessionInactivityTimeout 1209600
  OIDCSessionMaxDuration 1209600
  # We don't need the details to be more insecure
  OIDCPassClaimsAs none
  # Allow sessions to persist post browser restart
  OIDCSessionType server-cache:persistent
  # Allow sessions to persist past server restart
  OIDCCacheType file
  OIDCCacheDir "${APACHE_FOLDER}/oauth"
  OIDCXForwardedHeaders X-Forwarded-Proto X-Forwarded-Host
  OIDCCookieDomain aleph0.com
  OIDCCookieSameSite On
  OIDCCookieHTTPOnly Off

  <Directory "/">
    # Remove access to all directories not explicitly noted
    Require all denied
    # Disable directory indexes for directories that don't have index.html
    Options -Indexes
    # Disable symbolic links
    Options -FollowSymLinks
    # Don't use .htaccess, just make changes to config files
    AllowOverride None
    AllowOverrideList None
  </Directory>
  # Specifically override this directory since it's defined in apache2.conf
  <Directory "${APACHE_DOCUMENT_ROOT}">
    AllowOverride None
    Options -Indexes
    Require all granted
    # plex hostname (via cloudflare) adds /chjones/ to everything; this
    # prevents accessing the 'root' directory
    RedirectMatch 301 "^/([^/]*)$" "https://plex.aleph0.com/$1"
  </Directory>
  <Directory "/home/chjones/downloads">
    Options +Indexes
    # doesn't use index.html or similar files
    DirectoryIndex disabled
    # Use built-in basic auth if not going through plex.aleph0.com
    <If "'%{HTTP:X-Forwarded-Host}' != 'plex.aleph0.com'">
      AuthName 'Private'
      AuthType Basic
      AuthBasicProvider file
      AuthUserFile '/etc/apache2/chjones_auth'
      Require valid-user
    </If>
    <Else>
      AuthName "Aleph 0 Account Required"
      AuthType openid-connect
      Require claim hd:aleph0.com
    </Else>
  </Directory>
  # this makes plex.aleph0.com/chjones -> plex.aleph0.com/chjones/admin
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones">
    RedirectMatch permanent "^/chjones(/?)$" "/chjones/admin/"
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/admin/api">
    <If "'%{HTTP:X-Forwarded-Host}' != 'plex.aleph0.com'">
      RedirectMatch permanent "^(.*)$" "https://plex.aleph0.com$1"
    </If>
    <Else>
      AuthName "Aleph 0 Account Required"
      AuthType openid-connect
      Require claim hd:aleph0.com
      Options +ExecCGI
      AddHandler cgi-script .cgi
      # Allow testing from localhost (i.e., a development machine loading the
      # app from a local server but still accessing the scripts on this machine).
      # This should be fine with the credentials requirement. Also still requires
      # client (browser) to enable "allow third-party cookies".
      Header always setifempty Access-Control-Allow-Origin "http://127.0.0.1:3000"
      Header always setifempty Access-Control-Allow-Credentials "true"
    </Else>
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/oauth">
    <If "'%{HTTP:X-Forwarded-Host}' != 'plex.aleph0.com'">
      RedirectMatch permanent "^(.*)$" "https://plex.aleph0.com$1"
    </If>
    <Else>
      AuthName "Aleph 0 Account Required"
      AuthType openid-connect
      Require claim hd:aleph0.com
    </Else>
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/oauth/login">
    Options +ExecCGI
    DirectoryIndex index.cgi
    AddHandler cgi-script .cgi
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/rutorrent">
    <If "'%{HTTP:X-Forwarded-Host}' != 'plex.aleph0.com'">
      RedirectMatch permanent "^(.*)$" "https://plex.aleph0.com$1"
    </If>
    <Else>
      AuthName "Aleph 0 Account Required"
      AuthType openid-connect
      Require claim hd:aleph0.com
    </Else>
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/rutorrent/share">
    Require all denied
  </Directory>
  <Directory "${APACHE_DOCUMENT_ROOT}/chjones/rutorrent/conf">
    Require all denied
  </Directory>

  <Location "/chjones/oauth/redirect">
    <If "-n '%{QUERY_STRING}'">
      # mod_oauth_openidc chokes on this url if a / is added to the end,
      # so we get rid of the additional mangling done by mod_dir:
      # but also need to handle the case when it's given as a bare url or
      # invalid query (which currently returns 500); when given with / it just
      # returns index.html, a login error page I made
      DirectorySlash Off
    </If>
  </Location>

  Alias /chjones/downloads /home/chjones/downloads
  Alias /chjones/rtorrent "${APACHE_DOCUMENT_ROOT}/chjones/rutorrent"

# Locations requiring authorization: these should be set in this
# "LocationMatch" block rather than in individual blocks, because several
# identical settings are needed as explained below. You can still use other
# Location or similar blocks for individual customizations; the ones here
# in the "if" sections will be applied *last* in the resulting merge.
# *However*, note that if an authorization request is set elsewhere for
# one of the matched locations, the redirection for non-plex.aleph0.com
# hosts set here probably won't work.
  # OAuth cookies won't work if the client is requesting something other
  # than plex.aleph0.com (because that's how cookies work), despite the
  # UseCanonicalServer and the OIDCCookieDomain being set properly. So, if
  # trying to access one of these on a different host, redirect to
  # plex.aleph0.com. Because of the proxying nginx server, requests on the
  # server side look similar, but we have configured Cloudflare to set the
  # X-Forwarded-Host header, so we use that to determine if the host is
  # being requested "properly".
# Authorizing using the oauth flow requires cookies, which requires the
# domain to be consistent, so the host must be aleph0.com. Directives within
# 'If' blocks are processed last, and then in order of config file placement.
# So that locations previously set to other authorization (or no
# authorization) continue to be allowed, we set those last in case Seedhost
# expects to be able to continue to access those.


# Note that the current flow just to get to this point is:
# http[s]?://plex.aleph0.com(any path other than /chjones or /chjones/.*)
#   -> via cloudflare: https://plex.aleph0.com/chjones$1 (rewrite)
# http[s]?://plex.aleph0.com($|(/.*$))
#   -> via dns: http[s]?://server1359.seedhost.eu$1 (rewrite)
# (http[s]?://[^/]+)/(.*)([^/]+)$)
#   -> via nginx: $1/$2$3/ (redirect) (e.g., adds a / without changing origin
#      or the rest of the path)
# http[s]?://server1359.seedhost.eu/chjones/(.*$)
#   -> via nginx: http://chjones.server1359.seedhost.eu/$1 (proxy)
# http[s]?://([^\.]*[\.])?chjones.server1359.seedhost.eu($|(/.*$))
#   -> via nginx: http[s]?://127.0.0.1:8000$2 (proxy)
# with the exception of some specific app paths
#   (radarr, prowlarr, sonarr, RPC1, bazarr, etc.)
# Finally, the above VirtualHost *:8000 directive sets the canonical server
#   name to https://plex.aleph0.com and the document root to be the same
#   for all requests to this server (overriding less specific VirtualHost
#   directives in /etc/apache2/apache2.conf).
# Thus, requests to http[s]?://chjones.server1359.seedhost.eu/ and
#   http://127.0.0.1:8000 (locally) will be served from
#   /home/chjones/www/chjones.server1359.seedhost.eu/
#   (though https://chjones.server1359.seedhost.eu requests will give an
#   SSL certificate error).
# Requests to http[s]?://server1359.seedhost.eu/chjones[/]? will be served
#   from /home/chjones/www/chjones.server1359.seedhost.eu/chjones/.
# And requests to http[s]?://plex.aleph0.com[/]? will be served from
#   /home/chjones/www/chjones.server1359.seedhost.eu/chjones/

# make / and /chjones redirect to https://plex.aleph0.com/chjones/admin
# regardless of virtual server or hostname serving them originally
# Now, make sure nothing is served from the "root" directory; as above, this
# will only match requests
# Redirect(Match)? works in a directory context, so it is safe to
#   redirect the root (without subdirectories) to https://plex.aleph0.com/
#   since that destination will not access the root, and we follow with a
#   (more specific) /chjones directory section
  # Redirect any request to this directory that doesn't have a non-starting /
  # to the plex address; though the bare /chjones (without trailing /)
  # occurs only when bypassing nginx, this redirects to cloudflare which
  # properly adds chjones to https://plex.aleph0.com anyway when this
  # redirect drops it; the result is that any match to this directory without
  # a non-starting / is redirected to https://plex.aleph0.com/, which
  # is rewritten to request /chjones/, which has a non-starting /,
  # so this alone does not cause a loop.

# RedirectMatch permanent "^/chjones($|(/+[^/]*$))" "https://plex.aleph0.com/"
# AliasMatch "^[/]*$" "/home/chjones/www/chjones.server1359.seedhost.eu/chjones/admin/"

# End of this configuration file's VirtualHost block. Do not change lines
# after this.
</VirtualHost>
